#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <string.h>

#define MAX_COMMAND_LENGTH 1024

void display_prompt() {
    printf("$ ");  // Display a simple prompt
}

void execute_command(char *command) {
    pid_t pid = fork();

    if (pid < 0) {
        perror("fork failed");
        exit(EXIT_FAILURE);
    } else if (pid == 0) {
        // Child process
        if (execlp(command, command, NULL) == -1) {
            perror("exec failed");
            exit(EXIT_FAILURE);
        }
    } else {
        // Parent process
        wait(NULL);
    }
}

int main() {
    char command[MAX_COMMAND_LENGTH];

    while (1) {
        display_prompt();

        if (fgets(command, sizeof(command), stdin) == NULL) {
            printf("\n");
            break;  // End of file (Ctrl+D) encountered, exit the shell
        }

        // Remove trailing newline character
        command[strcspn(command, "\n")] = '\0';

        if (strlen(command) == 0) {
            continue;  // Empty command, prompt again
        }

        execute_command(command);
    }

    return 0;
}
