#include <stdio.h>
#include <stdlib.h>
#include <string.h>

extern char **environ;  // Declare the external 'environ' variable

// Function to get a copy of the 'environ' array
char **get_environ() {
    // Calculate the length of the 'environ' array
    int len = 0;
    while (environ[len] != NULL) {
        len++;
    }

    // Allocate memory for the copy of the 'environ' array
    char **environ_copy = malloc((len + 1) * sizeof(char *));
    if (environ_copy == NULL) {
        perror("get_environ: malloc failed");
        exit(EXIT_FAILURE);
    }

    // Copy each string in the 'environ' array to the copy
    for (int i = 0; i < len; i++) {
        int str_len = strlen(environ[i]);
        environ_copy[i] = malloc((str_len + 1) * sizeof(char));
        if (environ_copy[i] == NULL) {
            perror("get_environ: malloc failed");
            exit(EXIT_FAILURE);
        }
        strcpy(environ_copy[i], environ[i]);
    }

    // Set the last element of the copy to NULL
    environ_copy[len] = NULL;

    return environ_copy;
}

// Function to remove an environment variable
void _unsetenv(const char *name) {
    unsetenv(name);
}

// Function to initialize or modify an environment variable
void _setenv(const char *name, const char *value) {
    setenv(name, value, 1);
}

// Structure to hold information
typedef struct {
    char *name;
    int age;
    // Other fields...
} info_t;

// Function to initialize an info_t struct
void clear_info(info_t *info) {
    info->name = NULL;
    info->age = 0;
    // Initialize other fields...
}

// Function to set values in an info_t struct
void set_info(info_t *info, const char *name, int age) {
    info->name = malloc((strlen(name) + 1) * sizeof(char));
    if (info->name == NULL) {
        perror("set_info: malloc failed");
        exit(EXIT_FAILURE);
    }
    strcpy(info->name, name);
    info->age = age;
    // Set other fields...
}

// Function to free the fields of an info_t struct
void free_info(info_t *info) {
    free(info->name);
    // Free other fields...
}

int main() {
    // Example usage of the functions
    char **environ_copy = get_environ();
    for (int i = 0; environ_copy[i] != NULL; i++) {
        printf("%s\n", environ_copy[i]);
    }

    _unsetenv("MY_VAR");
    _setenv("ANOTHER_VAR", "value");

    info_t my_info;
    clear_info(&my_info);
    set_info(&my_info, "John Doe", 25);
    printf("Name: %s, Age: %d\n", my_info.name, my_info.age);
    free_info(&my_info);

    // Free the memory allocated for the 'environ' copy
    for (int i = 0; environ_copy[i] != NULL; i++) {
        free(environ_copy[i]);
    }
    free(environ_copy);

    return 0;
}
